#pragma once

#include "typedefs.hpp"

namespace config {
    {{#tuple_indices}}
    namespace {{ns}} {
        template<AmountIndex ... E>
        auto tuple_enum_get(const {{ns}}_amounts_t& t) noexcept -> coefficient_t {
            return (... + (std::get<std::to_underlying(E)>(t)));
        }

        {{#names}}
        auto {{function}}(const {{ns}}_amounts_t& t) noexcept -> coefficient_t;
        {{/names}}
    }

    {{/tuple_indices}}
}
