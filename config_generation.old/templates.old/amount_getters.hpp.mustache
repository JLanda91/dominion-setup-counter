
#pragma once

#include "typedefs.hpp"

namespace config {
    namespace kingdom{
        {{> tuple_enum_getters}}

        {{#amount_getters}}
        {{#kingdom}}
        {{#count_unused}}
        auto unused_{{name}}_total(const amounts_t& t, const amounts_t& max) noexcept -> coefficient_t;
        {{/count_unused}}
        {{^count_unused}}
        auto {{name}}_total(const amounts_t& t) noexcept -> coefficient_t;
        {{/count_unused}}
        {{/kingdom}}
        {{/amount_getters}}

        {{#specials}}
        {{#kingdom}}
        {{#data}}
        auto has_{{name}}(const amounts_t& t) noexcept -> bool;
        {{/data}}
        {{/kingdom}}
        {{/specials}}
    }

    namespace landscapes {
        {{> tuple_enum_getters}}

        {{#amount_getters}}
        {{#landscapes}}
        auto {{name}}_total(const amounts_t& t) noexcept -> coefficient_t;
        {{/landscapes}}
        {{/amount_getters}}

        {{#specials}}
        {{#landscapes}}
        {{#data}}
        auto has_{{name}}(const amounts_t& t) noexcept -> bool;
        {{/data}}
        {{/landscapes}}
        {{/specials}}
    }
}
